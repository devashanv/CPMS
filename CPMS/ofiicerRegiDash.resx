<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>